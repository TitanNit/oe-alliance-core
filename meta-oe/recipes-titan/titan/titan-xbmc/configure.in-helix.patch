--- a/tools/depends/configure.in	2015-05-08 09:45:28.000000000 +0200
+++ a/tools/depends/configure.in.patched	2015-05-08 10:05:26.000000000 +0200
@@ -146,6 +146,14 @@
     use_toolchain="${use_toolchain:-/usr}"
     platform_os="linux"
   ;;
+  mipsel-*-linux*)
+    use_cpu=$host_cpu
+    use_toolchain="${use_toolchain:-/usr}"
+    platform_cflags="-Os -fPIC -DPIC"
+    platform_ldflags="-Wl,-rpath-link=$prefix/$deps_dir/lib"
+    platform_cxxflags="$platform_cflags"
+    platform_os="linux"
+  ;;
   x86_64*-linux-gnu*|x86_64-*-linux-uclibc*)
     use_cpu=$host_cpu
     use_toolchain="${use_toolchain:-/usr}"

--- a/configure.in	2015-05-05 13:00:57.000000000 +0200
+++ a/configure.in.patched	2015-05-05 13:39:23.000000000 +0200
@@ -698,6 +698,17 @@
      use_wayland=no
      build_shared_lib=yes
      ;;
+  mipsel-*-linux*|mipsel*linux)
+     target_platform=target_dvbbox
+     ARCH="mips"
+     use_arch="mips"
+     use_joystick=no
+     use_gles=yes
+     use_gl=no
+     use_sdl=no
+     use_wayland=no
+     USE_STATIC_FFMPEG=1
+     ;;
   *)
      AC_MSG_ERROR(unsupported host ($host))
 esac
@@ -734,6 +745,23 @@
      CFLAGS="$CFLAGS"
      CXXFLAGS="$CXXFLAGS"
      ;;
+  dvbbox)
+     target_platform=target_dvbbox
+     ARCH="mips"
+     use_arch="mips"
+     ffmpeg_target_os=linux
+     use_joystick=no
+     use_gles=yes
+     use_sdl=no
+     use_x11=no
+     use_alsa="no"
+     use_wayland=no
+     USE_STATIC_FFMPEG=1
+     AC_DEFINE(HAS_EGLGLES, [1], [Define if supporting EGL based GLES Framebuffer])
+     USE_DVBBOX_EGL=1
+     CFLAGS="$CFLAGS"
+     CXXFLAGS="$CXXFLAGS"
+     ;;
 esac
 
 XBMC_SETUP_ARCH_DEFINES()

--- a/m4/xbmc_arch.m4	2015-05-07 17:12:51.000000000 +0200
+++ a/m4/xbmc_arch.m4.patched	2015-05-07 17:35:48.000000000 +0200
@@ -32,6 +32,9 @@
   arm*-*-linux-gnu*|arm*-*-linux-uclibc*)
      AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX")
      ;;
+  mipsel-*-linux*|mipsel*linux)
+     AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -D_MIPSEL -DTARGET_DVBBOX")
+     ;;
   *-*linux-android*)
      AC_SUBST(ARCH_DEFINES, "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_ANDROID")
      ;;

--- a/addons/library.xbmc.addon/libXBMC_addon.h
+++ b/addons/library.xbmc.addon/libXBMC_addon.h
@@ -55,8 +55,8 @@ typedef intptr_t      ssize_t;
 #define ADDON_HELPER_ARCH       "powerpc64-linux"
 #elif defined(__ARMEL__)
 #define ADDON_HELPER_ARCH       "arm"
-#elif defined(_MIPSEL)
-#define ADDON_HELPER_ARCH       "mipsel-linux"
+#elif defined(__mips__)
+#define ADDON_HELPER_ARCH       "mips"
 #else
 #define ADDON_HELPER_ARCH       "i486-linux"
 #endif

--- a/Makefile.in	2015-05-07 17:47:04.000000000 +0200
+++ a/Makefile.in.patched	2015-05-07 17:49:24.000000000 +0200
@@ -441,7 +441,7 @@
   endif
 endif
 	$(MAKE) -C lib/stsound/StSoundLibrary
-ifeq ($(or $(findstring powerpc,@ARCH@),$(findstring x86_64-linux,@ARCH@),$(findstring arm, @ARCH@),$(findstring freebsd,@ARCH@)),)
+ifeq ($(or $(findstring powerpc,@ARCH@),$(findstring x86_64-linux,@ARCH@),$(findstring arm, @ARCH@),$(findstring freebsd,@ARCH@),$(findstring mips,@ARCH@)),)
 	$(MAKE) -C lib/snesapu/SNES/SNESAPU
 endif
 imagelib: dllloader

--- a/xbmc/cores/DllLoader/DllLoader.h	2015-05-07 17:47:06.000000000 +0200
+++ a/xbmc/cores/DllLoader/DllLoader.h.patched	2015-05-07 17:51:35.000000000 +0200
@@ -23,7 +23,7 @@
 #include "coffldr.h"
 #include "LibraryLoader.h"
 
-#if defined(__linux__) && !defined(__powerpc__) && !defined(__arm__)
+#if defined(__linux__) && !defined(__powerpc__) && !defined(__arm__) && !defined(__mips__)
 #define USE_LDT_KEEPER
 #include "ldt_keeper.h"
 #endif

--- a/xbmc/cores/DllLoader/ldt_keeper.c	2015-05-07 17:47:06.000000000 +0200
+++ a/xbmc/cores/DllLoader/ldt_keeper.c.patched	2015-05-07 17:53:51.000000000 +0200
@@ -19,7 +19,7 @@
  */
 
 //#ifndef __powerpc__
-#if !defined(__powerpc__) && !defined(__ppc__) && !defined(__arm__)
+#if !defined(__powerpc__) && !defined(__ppc__) && !defined(__arm__) && !defined(__mips__)
 
 #include "ldt_keeper.h"
 
--- a/xbmc/linux/PlatformDefs.h	2015-05-07 17:47:06.000000000 +0200
+++ a/xbmc/linux/PlatformDefs.h.patched	2015-05-07 17:55:29.000000000 +0200
@@ -161,7 +161,7 @@
 #define __int64   long long
 #define __uint64  unsigned long long
 
-#if defined(__x86_64__) || defined(__powerpc__) || defined(__ppc__) || defined (__arm__) // should this be powerpc64 only?
+#if defined(__x86_64__) || defined(__powerpc__) || defined(__ppc__) || defined (__arm__) || defined(__mips__) // should this be powerpc64 only?
 #define __stdcall
 #else /* !__x86_64__ */
 #define __stdcall   __attribute__((__stdcall__))

--- a/xbmc/utils/fastmemcpy.c	2015-05-07 17:47:06.000000000 +0200
+++ a/xbmc/utils/fastmemcpy.c.patched	2015-05-07 17:56:37.000000000 +0200
@@ -25,7 +25,7 @@
  *  <http://www.gnu.org/licenses/>.
  *
  */
-#if !defined(TARGET_WINDOWS) && !defined(__ppc__) && !defined(__powerpc__) && !defined(__arm__) 
+#if !defined(TARGET_WINDOWS) && !defined(__ppc__) && !defined(__powerpc__) && !defined(__arm__) && !defined(__mips__) 
 #define HAVE_MMX2
 #define HAVE_SSE
 
--- a/xbmc/utils/fastmemcpy.h	2015-05-07 17:47:06.000000000 +0200
+++ a/xbmc/utils/fastmemcpy.h.patched	2015-05-07 17:57:32.000000000 +0200
@@ -23,8 +23,8 @@
 extern "C" {
 #endif
 
-#if !defined(TARGET_WINDOWS) && !defined(__ppc__) && !defined(__powerpc__) && !defined(TARGET_ANDROID) && !defined(TARGET_DARWIN_IOS)
-void * fast_memcpy(void * to, const void * from, size_t len);
+#if !defined(TARGET_WINDOWS) && !defined(__ppc__) && !defined(__powerpc__) && !defined(__mips__) && !defined(TARGET_ANDROID) && !defined(TARGET_DARWIN_IOS)
+void * fast_memcpy(void * to, const void * from, size_t len);
 //#define fast_memcpy memcpy
 #else
 #define fast_memcpy memcpy

--- a/tools/depends/target/ffmpeg/Makefile	2015-05-07 18:06:13.000000000 +0200
+++ a/tools/depends/target/ffmpeg/Makefile.patched	2015-05-07 18:09:39.000000000 +0200
@@ -47,6 +47,9 @@
 ifeq ($(findstring arm, $(CPU)), arm)
   ffmpg_config += --enable-pic --disable-armv5te --disable-armv6t2
 endif
+ifeq ($(findstring mips, $(CPU)), mips)
+  ffmpg_config += --disable-mips32r2 --disable-mipsdspr1 --disable-mipsdspr2
+endif
 ifeq ($(Configuration), Release)
   ffmpg_config += --disable-debug
 endif

--- a/tools/depends/target/ffmpeg/autobuild.sh	2015-05-07 18:06:13.000000000 +0200
+++ a/tools/depends/target/ffmpeg/autobuild.sh.patched	2015-05-07 18:10:53.000000000 +0200
@@ -155,6 +155,9 @@
 	--enable-nonfree \
 	--enable-pthreads \
 	--enable-zlib \
+	--disable-mips32r2 \
+	--disable-mipsdspr1 \
+	--disable-mipsdspr2 \
         ${FLAGS}
 
 make -j ${BUILDTHREADS} 

--- a/xbmc/utils/MathUtils.h	2015-05-07 18:24:38.000000000 +0200
+++ a/xbmc/utils/MathUtils.h.patched	2015-05-07 18:28:48.000000000 +0200
@@ -34,6 +34,7 @@
 
 #if defined(__ppc__) || \
     defined(__powerpc__) || \
+    defined(__mips__) || \
     defined(__arm__)
   #define DISABLE_MATHUTILS_ASM_ROUND_INT
 #endif

--- a/xbmc/cores/VideoRenderers/LinuxRendererGL.h	2015-05-07 18:24:38.000000000 +0200
+++ a/xbmc/cores/VideoRenderers/LinuxRendererGL.h.patched	2015-05-07 18:32:26.000000000 +0200
@@ -325,8 +325,7 @@
 
 
 inline int NP2( unsigned x ) {
-#if defined(TARGET_POSIX) && !defined(__POWERPC__) && !defined(__PPC__) && !defined(__arm__)
-  // If there are any issues compiling this, just append a ' && 0'
+#if defined(TARGET_POSIX) && !defined(__POWERPC__) && !defined(__PPC__) && !defined(__arm__) && !defined(__mips__)  // If there are any issues compiling this, just append a ' && 0'
   // to the above to make it '#if defined(TARGET_POSIX) && 0'
 
   // Linux assembly is AT&T Unix style, not Intel style

--- a/xbmc/cores/AudioEngine/AEFactory.cpp	2015-05-20 09:29:26.000000000 +0200
+++ a/xbmc/cores/AudioEngine/AEFactory.cpp.patched	2015-05-20 18:07:42.000000000 +0200
@@ -40,6 +40,7 @@
 
 bool CAEFactory::LoadEngine()
 {
+  return true;
   return CAEFactory::LoadEngine(AE_ENGINE_ACTIVE);
 }
 
@@ -78,6 +79,7 @@
 
 bool CAEFactory::StartEngine()
 {
+  return true;
   if (!AE)
     return false;
 
--- a/xbmc/Application.cpp	2015-05-20 09:29:26.000000000 +0200
+++ a/xbmc/Application.cpp.patched	2015-05-20 18:10:24.000000000 +0200
@@ -2420,6 +2420,20 @@
           useKeyboard = true;
       }
     }
+    printf("----->> %x\n", key.GetVKey());
+    switch(key.GetVKey())
+    {
+      case 0x0d:
+      case 0x80:
+      case 0x81:
+      case 0x82:
+      case 0x83:
+	  	if (iWin == WINDOW_DIALOG_KEYBOARD) {
+	  	  useKeyboard = false;
+        }
+	  	break;
+    }
+
     if (useKeyboard)
     {
       // use the virtualkeyboard section of the keymap, and send keyboard-specific or navigation
